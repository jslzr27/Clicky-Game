{"version":3,"sources":["components/Card/index.js","components/Score/index.js","components/Header/index.js","App.js","index.js"],"names":["TeamCard","props","react_default","a","createElement","className","id","onClick","pick","src","image","alt","name","Score","textColor","renderColor","Math","floor","random","length","currentScore","highScore","Header","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","clickedTeams","indexOf","setState","concat","toConsumableArray","_this2","components_Score","components_Header","teams","sort","map","x","Card","handleIncrement","bind","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"6OAkBeA,MAff,SAAmBC,GACf,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAOC,GAAG,WAAWC,QAAS,kBAAMN,EAAMO,KAAKP,EAAMK,MAChEJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,OAAKK,IAAKR,EAAMS,MAAOC,IAAKV,EAAMW,KAAMN,GAAG,mBCO5CO,MAdf,SAAgBZ,GACZ,IAAIa,EAAY,CACZ,YACA,YACA,YACA,cACA,oBAEAC,EAAcD,EAAUE,KAAKC,MAAMD,KAAKE,SAAWJ,EAAUK,SACjE,OACIjB,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,QAAMC,UAAWU,GAAjB,kBAA8Cd,EAAMmB,aAApD,iBAAgFnB,EAAMoB,aCInFC,MAbf,WACI,OACIpB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,oCACAF,EAAAC,EAAAC,cAAA,mECyDDmB,cA3Db,SAAAA,IAAc,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACZC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,QACKI,MAAQ,CACXV,UAAW,EACXD,aAAc,EACdY,aAAc,IALJR,+EASElB,GACd,IAA6C,IAAzCqB,KAAKI,MAAMC,aAAaC,QAAQ3B,GAAY,CAC9C,IAAIc,EAAgBO,KAAKI,MAAMX,aAAe,EAC1CC,EAAYM,KAAKI,MAAMV,UACtBD,EAAeC,IAChBA,EAAYD,GAEhBO,KAAKO,SAAS,CACZd,aAAcA,EACdC,UAAWA,EACXW,aAAY,CAAG1B,GAAH6B,OAAAV,OAAAW,EAAA,EAAAX,CAAUE,KAAKI,MAAMC,sBAGnCL,KAAKO,SAAS,CACZd,aAAc,EACdY,aAAa,sCAIV,IAAAK,EAAAV,KACP,OACEzB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAACkC,EAAD,CAAOlB,aAAcO,KAAKI,MAAMX,aAAcC,UAAWM,KAAKI,MAAMV,cAGtEnB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAACmC,EAAD,QAGFrC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBAEXmC,EACGC,KAAM,iBAAM,GAAMzB,KAAKE,WACvBwB,IAAK,SAAAC,GAAC,OAAIzC,EAAAC,EAAAC,cAACwC,EAAD,CACXtC,GAAKqC,EAAErC,GACPM,KAAO+B,EAAE/B,KACTF,MAAQiC,EAAEjC,MACVF,KAAM6B,EAAKQ,gBAAgBC,KAAKT,iBAnD5BU,aCFlBC,IAASC,OAAO/C,EAAAC,EAAAC,cAAC8C,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.884a2ddf.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction TeamCard (props) {\r\n    return (\r\n        <div className=\"row\"> \r\n        <div className=\"col s12\">\r\n        <div className=\"card\" id=\"teamCard\" onClick={() => props.pick(props.id)}>\r\n            <div className=\"card-image\">\r\n                <img src={props.image} alt={props.name} id=\"teamImage\" ></img>\r\n            </div>\r\n            {/* <h2>{props.name}</h2> */}\r\n        </div>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TeamCard;","import React from \"react\";\r\n\r\nfunction Score (props) {\r\n    let textColor = [\r\n        \"blue-text\",\r\n        \"pink-text\",\r\n        \"teal-text\",\r\n        \"orange-text\",\r\n        \"light-green-text\"\r\n    ];\r\n    let renderColor = textColor[Math.floor(Math.random() * textColor.length)];\r\n    return(\r\n        <h3><span className={renderColor}>Current Score: {props.currentScore} | Top Score: {props.highScore}</span></h3>\r\n    )\r\n}\r\n\r\nexport default Score;","import React from \"react\";\r\nimport TeamCard from \"../Card\";\r\n\r\nfunction Header () {\r\n    return(\r\n        <div className=\"row\">\r\n        <div className=\"col s12\">\r\n            <div className=\"card-panel\">\r\n                <h1>Football Team Selector</h1>\r\n                <h3>Click on the logo of a team to earn points</h3>\r\n            </div>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;","import React, {Component} from 'react';\nimport TeamCard from './components/Card';\nimport Score from \"./components/Score\";\nimport Header from \"./components/Header\";\nimport teams from \"./teams.json\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      highScore: 0,\n      currentScore: 0,\n      clickedTeams: []\n    }\n  }\n\n  handleIncrement(id) {\n    if (this.state.clickedTeams.indexOf(id) === -1) {\n      let currentScore =  this.state.currentScore + 1;\n      let highScore = this.state.highScore;\n        if(currentScore > highScore) {\n          highScore = currentScore\n        }\n      this.setState({\n        currentScore: currentScore,\n        highScore: highScore,\n        clickedTeams: [id, ...this.state.clickedTeams]\n      });\n    } else {\n      this.setState({\n        currentScore: 0,\n        clickedTeams:[]\n      });\n    }\n  }\n  render() {\n    return(\n      <div className=\"container\">\n        <div className=\"row\">\n        <div className=\"col s12\">\n          <Score currentScore={this.state.currentScore} highScore={this.state.highScore} />\n        </div>\n        </div>\n        <div className=\"row\">\n        <div className=\"col s12\">\n          <Header />\n        </div>\n        </div>\n        <div className=\"row\">\n        <div className=\"col s12 teamsView\">\n          {\n            teams\n              .sort( () => 0.5 - Math.random())\n              .map( x => <TeamCard \n              id= {x.id}\n              name= {x.name}\n              image= {x.image}\n              pick={this.handleIncrement.bind(this)} />)\n          }\n        </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App.js\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}